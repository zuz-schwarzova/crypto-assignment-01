#!/usr/bin/env python

from src.prng_generators.custom_prng import ansiX931prng
from src.prng_generators.native_prng import nativeprng
from src.utils.hash_file import sha256sum

'''
Creates two binary files (F.bin, F2.bin) of pseudorandom data with size 10^9 bits (125000000 bytes) in target directory.
F.bin contains data generated by implementation of 128bit ANSI X9.31, build on AES implementation.
F2.bin contains data generated by using native Python random functions.

Prints a SHA256 string hash of the F.bin file.
'''
def main():
    # creates a new binary file in target directort, F.bin
    fFile = open("target/F.bin", "wb")
    # generates pseudorandom data of size 10^9 bits using ANSI X9.31 implementation
    random_data = ansiX931prng(125000000)
    # writes data into file
    fFile.write(random_data)

    #creates a new binary file in target directort, F2.bin
    f2File = open("target/F2.bin", "wb")
    # generates pseudorandom data of size 10^9 bits using native Python random functions
    random_data = nativeprng(125000000)
    # writes data into file
    f2File.write(random_data)

    #generates sha256 string hash for F.bin and prints it
    print('F.bin\'s SHA256 hash is: ' + sha256sum('target/F.bin'))